% This is an example script to demonstrate the use of our 
% algorithm for clustering spike trains[1].
%
% There are two examples, the first from Figure 4 of the manuscript which
% is synthetic data that is clustered into 7 groups. The second is for
% spiking data with hierarchical structure where the neurons are split into
% 10 large groups and each group is divided into two smaller subgroups to
% give a total of 20 groups.
%
% Visualiztion of the raster plot is done by expanding on code developed
% by [2].
% 
% [1] Yazan N. Billeh*, Michael T. Schaub*, Costas A. Anastassiou, 
% Mauricio Barahona, and Christof Koch; Revealing cell assemblies at 
% multiple levels of granularity (2014),Journal of Neuroscience Methods
% * Denotes equal contribution
% 
% [2] Mark D. Humphires; Spike-Train Communities: Finding Groups of Similar
% Spike Trains (2011), Journal of Neuroscience

%%%%%%%%%%%%%%%%%%%%%%%%%
%% EXAMPLE 1 - Figure 4
%%%%%%%%%%%%%%%%%%%%%%%%%
clear all


% Loading the dataset. Note the format is two columns with the first being
% the neuron number and the second being the time that neuron fired
load('Figure_4')                            

% Calculate the adjacency matrix
FCM = createFCM(spks);

% Define the Markov time for clustering using the stability community
% detection method. Time is defined on a log-scale
Time = 10.^[-2:0.05:2];

% Call the stability function to cluster the adjacency matrix. See the help
% of stability for more information, but briefly: S, N, VI and C contain 
% respectively the stability, the number of communities, the variation of
% information, and the optimal partition  for each Markov time 
% contained in the interval [Time].
[S, N, VI, C] = stability(FCM,Time,'full','plot','directed','v','p');

% From the plot generated by the stability function, you will see a plateau
% at 7 groups. From there we selected the Markov time of interest to plot
% the sorted rastergram (see text for more information). The visualization
% code is adpated from [2]
time_index_of_interest = 44;

plot_clustered_spike_raster(spks,C(:,time_index_of_interest),'123');




%%%%%%%%%%%%%%%%%%%%%%%%%
%% EXAMPLE 2 - Figure 6
%%%%%%%%%%%%%%%%%%%%%%%%%
clear all


% Loading the dataset. Note the format is two columns with the first being
% the neuron number and the second being the time that neuron fired
load('Figure_6')                            

% Calculate the adjacency matrix
FCM = createFCM(spks);

% Define the Markov time for clustering using the stability community
% detection method. Time is defined on a log-scale
Time = 10.^[-2:0.05:2];

% Call the stability function to cluster the adjacency matrix. See the help
% for stability for more information
[S, N, VI, C] = stability(FCM,Time,'full','plot','directed','v','p');

% From the plot generated by the stability function, you will see a plateau
% at at 20 groups and 10 groups. 

time_index_of_interest = 27;

% For 20 group solution
plot_clustered_spike_raster(spks,C(:,time_index_of_interest),'123');

time_index_of_interest = 44;

% For 10 group solution
plot_clustered_spike_raster(spks,C(:,time_index_of_interest),'123');
